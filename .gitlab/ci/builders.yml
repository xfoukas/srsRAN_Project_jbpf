#
# Copyright 2013-2025 Software Radio Systems Limited
#
# By using this file, you agree to the terms and conditions set
# forth in the LICENSE file which can be found at the top level of
# the distribution.
#

include:
  - project: softwareradiosystems/ci/tools
    ref: "22"
    file: .gitlab/ci-shared/setup/all.yml
  - project: softwareradiosystems/ci/tools
    ref: "22"
    file: .gitlab/ci-shared/tools/docker.yml
  - project: softwareradiosystems/ci/tools
    ref: "22"
    file: .gitlab/ci-shared/tools/python.yml
  - local: .gitlab/ci/builders/version.yml

################################################################################
# Stages
################################################################################
stages:
  - ci
  - dependencies
  - publish
  - alt registries
  - manifest

################################################################################
## CI
################################################################################
tox python in builder:
  stage: ci
  extends: .tox
  rules:
    - if: $ON_MR
      changes:
        paths:
          - .gitlab/ci/builders/**/*.py
  variables:
    PY_DIR: .gitlab/ci/builders
    GIT_LFS_SKIP_SMUDGE: 1

################################################################################
# UHD builder
################################################################################
.ubuntu-uhd-builder:
  stage: dependencies
  image: ubuntu:${os_version}
  rules:
    - if: $ON_MR
  variables:
    os_version: ""
    arch_name: ""
    uhd_version: ""
    target_arch: ""
    GIT_STRATEGY: none
    KUBERNETES_CPU_REQUEST: ${SRS_CPU_LIMIT}
    KUBERNETES_CPU_LIMIT: ${SRS_CPU_LIMIT}
    KUBERNETES_MEMORY_REQUEST: ${SRS_MEMORY_LIMIT}
    KUBERNETES_MEMORY_LIMIT: ${SRS_MEMORY_LIMIT}
  before_script:
    - TZ=Europe/Madrid && ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

    # Download existing package in the registry, if exists
    - |
      download_from_registry() {
        DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends curl apt-transport-https ca-certificates xz-utils
        
        cd ${CI_PROJECT_DIR}
        http_code=$(curl -w "%{http_code}" --header "PRIVATE-TOKEN: $CODEBOT_TOKEN" "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/uhd/ubuntu-${os_version}-${arch_name}-${uhd_version}/uhd.tar.gz" -o output.tar.gz)
        if [[ $http_code == "200" ]]; then
          tar -xf output.tar.gz
          return 0
        else
          return 1
        fi
      }

    # Install dependencies and compile
    - |
      build_uhd() {
        docker/scripts/install_uhd_dependencies.sh build
        docker/scripts/build_uhd.sh ${uhd_version} ${target_arch} ${KUBERNETES_CPU_REQUEST}
        mkdir -p ${CI_PROJECT_DIR}/.gitlab/ci/builders/uhd
        cp -r /opt/uhd/${uhd_version} ${CI_PROJECT_DIR}/.gitlab/ci/builders/uhd/${uhd_version}
      }

    # Publish compiled version to the registry
    - |
      publish_to_registry() {
        cd ${CI_PROJECT_DIR}
        tar -czf uhd.tar.gz .gitlab/ci/builders/uhd/${uhd_version}
        curl --fail --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file uhd.tar.gz "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/uhd/ubuntu-${os_version}-${arch_name}-${uhd_version}/uhd.tar.gz"
      }
  script:
    - |
      if download_from_registry; then
        echo "Reusing existing package"
      else
        echo "Not found on the package registry. It will be compiled and published"
        build_uhd
        publish_to_registry
      fi
  artifacts:
    paths:
      - .gitlab/ci/builders/uhd
    expire_in: 8 hours
  parallel:
    matrix:
      - os_version: "22.04"
        uhd_version: ["4.8.0.0", "4.7.0.0", "4.6.0.0", "4.4.0.0", "4.3.0.0"] # "4.1.0.5" default
      - os_version: "24.04"
        uhd_version: ["4.8.0.0", "4.7.0.0"] # "4.6.0.0" default
      - os_version: "24.10"
        uhd_version: ["4.8.0.0"] # "4.7.0.0" default
      - os_version: "25.04"
        uhd_version: ["4.8.0.0"] # "4.7.0.0" default

ubuntu-uhd-builder avx2:
  extends: .ubuntu-uhd-builder
  tags:
    - amd64-avx2
  variables:
    arch_name: amd64
    target_arch: x86-64-v3

ubuntu-uhd-builder arm64:
  extends: .ubuntu-uhd-builder
  tags:
    - arm64
  variables:
    arch_name: arm64
    target_arch: armv8.2-a+crypto+fp16+dotprod

################################################################################
# DPDK builder
################################################################################
.ubuntu-dpdk-builder:
  stage: dependencies
  image: ubuntu:${os_version}
  rules:
    - if: $ON_MR
  variables:
    os_version: ""
    arch_name: ""
    dpdk_version: ""
    extra_arch_name: ""
    target_arch: ""
    GIT_STRATEGY: none
    KUBERNETES_CPU_REQUEST: ${SRS_CPU_LIMIT}
    KUBERNETES_CPU_LIMIT: ${SRS_CPU_LIMIT}
    KUBERNETES_MEMORY_REQUEST: ${SRS_MEMORY_LIMIT}
    KUBERNETES_MEMORY_LIMIT: ${SRS_MEMORY_LIMIT}
  before_script:
    - TZ=Europe/Madrid && ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

    # Download existing package in the registry, if exists
    - |
      download_from_registry() {
        DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends curl apt-transport-https ca-certificates xz-utils
        
        cd ${CI_PROJECT_DIR}
        http_code=$(curl -w "%{http_code}" --header "PRIVATE-TOKEN: $CODEBOT_TOKEN" "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/dpdk/ubuntu-${os_version}-${arch_name}-${dpdk_version}${extra_arch_name}/dpdk.tar.gz" -o output.tar.gz)
        if [[ $http_code == "200" ]]; then
          tar -xf output.tar.gz
          return 0
        else
          return 1
        fi
      }

    # Install dependencies and compile
    - |
      build_dpdk() {
        unset PIP_EXTRA_INDEX_URL
        unset PIP_INDEX_URL        
        docker/scripts/install_dpdk_dependencies.sh build
        docker/scripts/build_dpdk.sh ${dpdk_version} ${target_arch} ${KUBERNETES_CPU_REQUEST}
        mkdir -p ${CI_PROJECT_DIR}/.gitlab/ci/builders/dpdk
        cp -r /opt/dpdk/${dpdk_version} ${CI_PROJECT_DIR}/.gitlab/ci/builders/dpdk/${dpdk_version}${extra_arch_name}
      }

    # Publish compiled version to the registry
    - |
      publish_to_registry() {
        cd ${CI_PROJECT_DIR}
        tar -czf dpdk.tar.gz .gitlab/ci/builders/dpdk/${dpdk_version}${extra_arch_name}
        curl --fail --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file dpdk.tar.gz "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/dpdk/ubuntu-${os_version}-${arch_name}-${dpdk_version}${extra_arch_name}/dpdk.tar.gz"
      }
  script:
    - |
      if download_from_registry; then
        echo "Reusing existing package"
      else
        echo "Not found on the package registry. It will be compiled and published"
        build_dpdk
        publish_to_registry
      fi
  artifacts:
    paths:
      - .gitlab/ci/builders/dpdk
    expire_in: 8 hours
  parallel:
    matrix:
      - &dpdk_2204_no_isa_matrix
        os_version: "22.04"
        dpdk_version: ["22.11.6", "23.11.1", "24.11.1"]
      - &dpdk_2204_matrix
        os_version: "22.04"
        dpdk_version: ["21.08", "22.11.6", "23.11.1", "24.11.1"]
      - &dpdk_2404_matrix
        os_version: "24.04"
        dpdk_version: ["23.11.1", "24.11.1"]
      - &dpdk_2410_matrix
        os_version: "24.10"
        dpdk_version: ["23.11.1", "24.11.1"]
      - &dpdk_2504_matrix
        os_version: "25.04"
        dpdk_version: ["24.11.1"]

ubuntu-dpdk-builder no isa:
  extends: .ubuntu-dpdk-builder
  tags:
    - amd64-avx2
  variables:
    arch_name: amd64
    target_arch: x86-64
  parallel:
    matrix:
      - *dpdk_2204_no_isa_matrix

ubuntu-dpdk-builder avx2:
  extends: .ubuntu-dpdk-builder
  tags:
    - amd64-avx2
  variables:
    arch_name: amd64
    extra_arch_name: _avx2
    target_arch: x86-64-v3
  parallel:
    matrix:
      - *dpdk_2204_matrix
      - *dpdk_2404_matrix
      - *dpdk_2410_matrix
      - *dpdk_2504_matrix

ubuntu-dpdk-builder avx512:
  extends: .ubuntu-dpdk-builder
  tags:
    - amd64-avx2-avx512
  variables:
    arch_name: amd64
    extra_arch_name: _avx512
    target_arch: x86-64-v4
  parallel:
    matrix:
      - *dpdk_2204_matrix
      - *dpdk_2404_matrix
      - *dpdk_2410_matrix
      - *dpdk_2504_matrix

ubuntu-dpdk-builder arm64:
  extends: .ubuntu-dpdk-builder
  tags:
    - arm64
  variables:
    arch_name: arm64
    target_arch: armv8.2-a+crypto+fp16+dotprod

################################################################################
# Common
################################################################################
.image-build-publish:
  extends: .docker-builder
  stage: publish
  variables:
    GIT_LFS_SKIP_SMUDGE: 1
    OS_FAMILY: none
    OS_NAME: none
    OS_VERSION: none
    MULTI_ARCH_BUILD: "false"
    RHEL_CT_VERSION: none
    MODE: publish
    KUBERNETES_EPHEMERAL_STORAGE_REQUEST: "75G"
    KUBERNETES_EPHEMERAL_STORAGE_LIMIT: "75G"
  tags:
    - ${PLATFORM}-docker
  rules:
    - if: $ON_MR
  before_script:
    - |
      export NAME=builder-$OS_NAME-$OS_VERSION
      export VERSION=${DOCKER_BUILDER_VERSION}-${PLATFORM}
      export CONTEXT=.gitlab/ci/builders
      export DOCKERFILE=$CONTEXT/$OS_FAMILY
      export BUILD_ARGS="OS_NAME=${OS_NAME};VERSION=${OS_VERSION};TAG=${VERSION};RHEL_VERSION=${RHEL_CT_VERSION};CR_REGISTRY_URI=${CR_REGISTRY_URI}"
    - |
      mkdir -p ${CI_PROJECT_DIR}/${CONTEXT}/lib
      DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends curl apt-transport-https ca-certificates xz-utils
      curl --header "PRIVATE-TOKEN: $CODEBOT_TOKEN" "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/wls/25.03/libwls.so" -o ${CI_PROJECT_DIR}/${CONTEXT}/lib/libwls.so
      curl --header "PRIVATE-TOKEN: $CODEBOT_TOKEN" "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/libshared/0.0.1/libshared.so" -o ${CI_PROJECT_DIR}/${CONTEXT}/lib/libshared.so
    - cp -r ${CI_PROJECT_DIR}/docker/scripts/. ${CI_PROJECT_DIR}/${CONTEXT}
    - mkdir -p $CONTEXT/lib $CONTEXT/uhd $CONTEXT/dpdk
    - ls -lah $CONTEXT $CONTEXT/lib $CONTEXT/uhd $CONTEXT/dpdk
  needs:
    - builder version

.alternative-tag:
  extends: .docker copy
  stage: alt registries
  variables:
    OS_NAME: none
    OS_VERSION: none
    VERSION: $DOCKER_BUILDER_VERSION
    ALT_REGISTRY: ${GITLAB_REGISTRY_URI}
  script:
    - |
      skopeo copy \
        docker://${CR_REGISTRY_URI}${CI_PROJECT_NAMESPACE#'softwareradiosystems'}/${CI_PROJECT_NAME}/builder-$OS_NAME-$OS_VERSION:${VERSION} \
        docker://${ALT_REGISTRY}${CI_PROJECT_NAMESPACE#'softwareradiosystems'}/${CI_PROJECT_NAME}/builder-$OS_NAME-$OS_VERSION:${VERSION}

.manifest:
  extends: .docker manifest
  stage: manifest
  variables:
    OS_NAME: none
    OS_VERSION: none
    VERSION: $DOCKER_BUILDER_VERSION
  before_script:
    - |
      export NAME=builder-${OS_NAME}-${OS_VERSION}

################################################################################
# Codechecker
################################################################################
image-build-publish [codechecker]:
  extends: .image-build-publish
  stage: publish
  variables:
    MULTI_ARCH_BUILD: none
    RHEL_CT_VERSION: none
    PLATFORM: amd64
    MODE: publish
  tags:
    - $PLATFORM
  rules:
    - if: $ON_MR
  before_script:
    - |
      export NAME=codechecker
      export VERSION=$DOCKER_BUILDER_VERSION
      export CONTEXT=.gitlab/ci/builders
      export DOCKERFILE=$CONTEXT/codechecker
      export BUILD_ARGS="CR_REGISTRY_URI=${CR_REGISTRY_URI};CI_TOOLS_REPO=${CI_TOOLS_REPO}"
    - |
      cp -r ${CI_PROJECT_DIR}/docker/scripts/. ${CI_PROJECT_DIR}/${CONTEXT}
  needs:
    - builder version

alternative-tag [codechecker]:
  extends: .docker copy
  stage: alt registries
  script:
    - |
      skopeo copy \
        docker://${CR_REGISTRY_URI}${CI_PROJECT_NAMESPACE#'softwareradiosystems'}/${CI_PROJECT_NAME}/codechecker:${DOCKER_BUILDER_VERSION} \
        docker://${GITLAB_REGISTRY_URI}${CI_PROJECT_NAMESPACE#'softwareradiosystems'}/${CI_PROJECT_NAME}/codechecker:${DOCKER_BUILDER_VERSION}
  needs:
    - builder version
    - image-build-publish [codechecker]

################################################################################
# Ubuntu 22.04
################################################################################
image-build-publish [ubuntu, 22.04, amd64]:
  extends:
    - .image-build-publish
  variables:
    OS_FAMILY: debian
    OS_NAME: ubuntu
    OS_VERSION: "22.04"
    PLATFORM: amd64
  needs:
    - builder version
    - job: ubuntu-uhd-builder avx2
      parallel:
        matrix:
          - os_version: "22.04"
            uhd_version: ["4.8.0.0", "4.7.0.0", "4.6.0.0", "4.4.0.0", "4.3.0.0"]
    - job: ubuntu-dpdk-builder no isa
      parallel:
        matrix:
          - os_version: "22.04"
            dpdk_version: ["22.11.6", "23.11.1", "24.11.1"]
    - job: ubuntu-dpdk-builder avx2
      parallel:
        matrix:
          - os_version: "22.04"
            dpdk_version: ["21.08", "22.11.6", "23.11.1", "24.11.1"]
    - job: ubuntu-dpdk-builder avx512
      parallel:
        matrix:
          - os_version: "22.04"
            dpdk_version: ["21.08", "22.11.6", "23.11.1", "24.11.1"]

alternative-tag [ubuntu, 22.04, amd64]:
  extends:
    - .alternative-tag
  variables:
    OS_NAME: ubuntu
    OS_VERSION: "22.04"
    VERSION: ${DOCKER_BUILDER_VERSION}-amd64
  needs:
    - builder version
    - image-build-publish [ubuntu, 22.04, amd64]

image-build-publish [ubuntu, 22.04, arm64]:
  extends:
    - .image-build-publish
  variables:
    OS_FAMILY: debian
    OS_NAME: ubuntu
    OS_VERSION: "22.04"
    PLATFORM: arm64
  needs:
    - builder version
    - job: ubuntu-uhd-builder arm64
      parallel:
        matrix:
          - os_version: "22.04"
            uhd_version: ["4.8.0.0", "4.7.0.0", "4.6.0.0", "4.4.0.0", "4.3.0.0"]
    - job: ubuntu-dpdk-builder arm64
      parallel:
        matrix:
          - os_version: "22.04"
            dpdk_version: ["21.08", "22.11.6", "23.11.1", "24.11.1"]

alternative-tag [ubuntu, 22.04, arm64]:
  extends:
    - .alternative-tag
  variables:
    OS_NAME: ubuntu
    OS_VERSION: "22.04"
    VERSION: ${DOCKER_BUILDER_VERSION}-arm64
  needs:
    - builder version
    - image-build-publish [ubuntu, 22.04, arm64]

manifest [ubuntu, 22.04]:
  extends: .manifest
  variables:
    OS_NAME: ubuntu
    OS_VERSION: "22.04"
  needs:
    - builder version
    - job: alternative-tag [ubuntu, 22.04, amd64]
      optional: false
    - job: alternative-tag [ubuntu, 22.04, arm64]
      optional: false
  parallel:
    matrix:
      - REGISTRY_URI: ["${CR_REGISTRY_URI}", "${GITLAB_REGISTRY_URI}"]

################################################################################
# Ubuntu 24.04
################################################################################
image-build-publish [ubuntu, 24.04, amd64]:
  extends:
    - .image-build-publish
  variables:
    OS_FAMILY: debian
    OS_NAME: ubuntu
    OS_VERSION: "24.04"
    PLATFORM: amd64
  needs:
    - builder version
    - job: ubuntu-uhd-builder avx2
      parallel:
        matrix:
          - os_version: "24.04"
            uhd_version: ["4.8.0.0", "4.7.0.0"] # "4.6.0.0" default
    - job: ubuntu-dpdk-builder avx2
      parallel:
        matrix:
          - os_version: "24.04"
            dpdk_version: ["23.11.1", "24.11.1"]
    - job: ubuntu-dpdk-builder avx512
      parallel:
        matrix:
          - os_version: "24.04"
            dpdk_version: ["23.11.1", "24.11.1"]

alternative-tag [ubuntu, 24.04, amd64]:
  extends:
    - .alternative-tag
  variables:
    OS_NAME: ubuntu
    OS_VERSION: "24.04"
    VERSION: ${DOCKER_BUILDER_VERSION}-amd64
  needs:
    - builder version
    - image-build-publish [ubuntu, 24.04, amd64]

image-build-publish [ubuntu, 24.04, arm64]:
  extends:
    - .image-build-publish
  variables:
    OS_FAMILY: debian
    OS_NAME: ubuntu
    OS_VERSION: "24.04"
    PLATFORM: arm64
  needs:
    - builder version
    - job: ubuntu-uhd-builder arm64
      parallel:
        matrix:
          - os_version: "24.04"
            uhd_version: ["4.8.0.0", "4.7.0.0"] # "4.6.0.0" default
    - job: ubuntu-dpdk-builder arm64
      parallel:
        matrix:
          - os_version: "24.04"
            dpdk_version: ["23.11.1", "24.11.1"]

alternative-tag [ubuntu, 24.04, arm64]:
  extends:
    - .alternative-tag
  variables:
    OS_NAME: ubuntu
    OS_VERSION: "24.04"
    VERSION: ${DOCKER_BUILDER_VERSION}-arm64
  needs:
    - builder version
    - image-build-publish [ubuntu, 24.04, arm64]

manifest [ubuntu, 24.04]:
  extends: .manifest
  variables:
    OS_NAME: ubuntu
    OS_VERSION: "24.04"
  needs:
    - builder version
    - job: alternative-tag [ubuntu, 24.04, amd64]
      optional: false
    - job: alternative-tag [ubuntu, 24.04, arm64]
      optional: false
  parallel:
    matrix:
      - REGISTRY_URI: ["${CR_REGISTRY_URI}", "${GITLAB_REGISTRY_URI}"]

################################################################################
# Ubuntu 24.04-rtsan
################################################################################
image-build-publish [ubuntu, 24.04-rtsan, amd64]:
  extends:
    - .image-build-publish
  variables:
    OS_FAMILY: debian-rtsan
    OS_NAME: ubuntu
    OS_VERSION: "24.04-rtsan"
    PLATFORM: amd64
    KUBERNETES_EPHEMERAL_STORAGE_REQUEST: "70G"
    KUBERNETES_EPHEMERAL_STORAGE_LIMIT: "70G"
  tags:
    - ${PLATFORM}-docker
  needs:
    - builder version
    - job: ubuntu-uhd-builder avx2
      parallel:
        matrix:
          - os_version: "24.04"
            uhd_version: ["4.8.0.0", "4.7.0.0"] # "4.6.0.0" default
    - job: ubuntu-dpdk-builder avx2
      parallel:
        matrix:
          - os_version: "24.04"
            dpdk_version: ["23.11.1", "24.11.1"]
    - job: ubuntu-dpdk-builder avx512
      parallel:
        matrix:
          - os_version: "24.04"
            dpdk_version: ["23.11.1", "24.11.1"]

alternative-tag [ubuntu, 24.04-rtsan, amd64]:
  extends:
    - .alternative-tag
  variables:
    OS_NAME: ubuntu
    OS_VERSION: "24.04-rtsan"
    VERSION: ${DOCKER_BUILDER_VERSION}-amd64
  needs:
    - builder version
    - image-build-publish [ubuntu, 24.04-rtsan, amd64]

image-build-publish [ubuntu, 24.04-rtsan, arm64]:
  extends:
    - .image-build-publish
  variables:
    OS_FAMILY: debian-rtsan
    OS_NAME: ubuntu
    OS_VERSION: "24.04-rtsan"
    PLATFORM: arm64
  needs:
    - builder version
    - job: ubuntu-uhd-builder arm64
      parallel:
        matrix:
          - os_version: "24.04"
            uhd_version: ["4.8.0.0", "4.7.0.0"] # "4.6.0.0" default
    - job: ubuntu-dpdk-builder arm64
      parallel:
        matrix:
          - os_version: "24.04"
            dpdk_version: ["23.11.1", "24.11.1"]

alternative-tag [ubuntu, 24.04-rtsan, arm64]:
  extends:
    - .alternative-tag
  variables:
    OS_NAME: ubuntu
    OS_VERSION: "24.04-rtsan"
    VERSION: ${DOCKER_BUILDER_VERSION}-arm64
  needs:
    - builder version
    - image-build-publish [ubuntu, 24.04-rtsan, arm64]

manifest [ubuntu, 24.04-rtsan]:
  extends: .manifest
  variables:
    OS_NAME: ubuntu
    OS_VERSION: "24.04-rtsan"
  needs:
    - builder version
    - job: alternative-tag [ubuntu, 24.04-rtsan, amd64]
      optional: false
    - job: alternative-tag [ubuntu, 24.04-rtsan, arm64]
      optional: false
  parallel:
    matrix:
      - REGISTRY_URI: ["${CR_REGISTRY_URI}", "${GITLAB_REGISTRY_URI}"]

################################################################################
# Ubuntu 24.10
################################################################################
image-build-publish [ubuntu, 24.10, amd64]:
  extends:
    - .image-build-publish
  variables:
    OS_FAMILY: debian
    OS_NAME: ubuntu
    OS_VERSION: "24.10"
    PLATFORM: amd64
  needs:
    - builder version
    - job: ubuntu-uhd-builder avx2
      parallel:
        matrix:
          - os_version: "24.10"
            uhd_version: ["4.8.0.0"] # "4.7.0.0" default
    - job: ubuntu-dpdk-builder avx2
      parallel:
        matrix:
          - os_version: "24.10"
            dpdk_version: ["23.11.1", "24.11.1"]
    - job: ubuntu-dpdk-builder avx512
      parallel:
        matrix:
          - os_version: "24.10"
            dpdk_version: ["23.11.1", "24.11.1"]

alternative-tag [ubuntu, 24.10, amd64]:
  extends:
    - .alternative-tag
  variables:
    OS_NAME: ubuntu
    OS_VERSION: "24.10"
    VERSION: ${DOCKER_BUILDER_VERSION}-amd64
  needs:
    - builder version
    - image-build-publish [ubuntu, 24.10, amd64]

image-build-publish [ubuntu, 24.10, arm64]:
  extends:
    - .image-build-publish
  variables:
    OS_FAMILY: debian
    OS_NAME: ubuntu
    OS_VERSION: "24.10"
    PLATFORM: arm64
  needs:
    - builder version
    - job: ubuntu-uhd-builder arm64
      parallel:
        matrix:
          - os_version: "24.10"
            uhd_version: ["4.8.0.0"] # "4.7.0.0" default
    - job: ubuntu-dpdk-builder arm64
      parallel:
        matrix:
          - os_version: "24.10"
            dpdk_version: ["23.11.1", "24.11.1"]

alternative-tag [ubuntu, 24.10, arm64]:
  extends:
    - .alternative-tag
  variables:
    OS_NAME: ubuntu
    OS_VERSION: "24.10"
    VERSION: ${DOCKER_BUILDER_VERSION}-arm64
  needs:
    - builder version
    - image-build-publish [ubuntu, 24.10, arm64]

manifest [ubuntu, 24.10]:
  extends: .manifest
  variables:
    OS_NAME: ubuntu
    OS_VERSION: "24.10"
  needs:
    - builder version
    - job: alternative-tag [ubuntu, 24.10, amd64]
      optional: false
    - job: alternative-tag [ubuntu, 24.10, arm64]
      optional: false
  parallel:
    matrix:
      - REGISTRY_URI: ["${CR_REGISTRY_URI}", "${GITLAB_REGISTRY_URI}"]

################################################################################
# Ubuntu 25.04
################################################################################
image-build-publish [ubuntu, 25.04, amd64]:
  extends:
    - .image-build-publish
  variables:
    OS_FAMILY: debian
    OS_NAME: ubuntu
    OS_VERSION: "25.04"
    PLATFORM: amd64
  needs:
    - builder version
    - job: ubuntu-uhd-builder avx2
      parallel:
        matrix:
          - os_version: "25.04"
            uhd_version: ["4.8.0.0"] # "4.7.0.0" default
    - job: ubuntu-dpdk-builder avx2
      parallel:
        matrix:
          - os_version: "25.04"
            dpdk_version: ["24.11.1"]
    - job: ubuntu-dpdk-builder avx512
      parallel:
        matrix:
          - os_version: "25.04"
            dpdk_version: ["24.11.1"]

alternative-tag [ubuntu, 25.04, amd64]:
  extends:
    - .alternative-tag
  variables:
    OS_NAME: ubuntu
    OS_VERSION: "25.04"
    VERSION: ${DOCKER_BUILDER_VERSION}-amd64
  needs:
    - builder version
    - image-build-publish [ubuntu, 25.04, amd64]

image-build-publish [ubuntu, 25.04, arm64]:
  extends:
    - .image-build-publish
  variables:
    OS_FAMILY: debian
    OS_NAME: ubuntu
    OS_VERSION: "25.04"
    PLATFORM: arm64
  needs:
    - builder version
    - job: ubuntu-uhd-builder arm64
      parallel:
        matrix:
          - os_version: "25.04"
            uhd_version: ["4.8.0.0"] # "4.7.0.0" default
    - job: ubuntu-dpdk-builder arm64
      parallel:
        matrix:
          - os_version: "25.04"
            dpdk_version: ["24.11.1"]

alternative-tag [ubuntu, 25.04, arm64]:
  extends:
    - .alternative-tag
  variables:
    OS_NAME: ubuntu
    OS_VERSION: "25.04"
    VERSION: ${DOCKER_BUILDER_VERSION}-arm64
  needs:
    - builder version
    - image-build-publish [ubuntu, 25.04, arm64]

manifest [ubuntu, 25.04]:
  extends: .manifest
  variables:
    OS_NAME: ubuntu
    OS_VERSION: "25.04"
  needs:
    - builder version
    - job: alternative-tag [ubuntu, 25.04, amd64]
      optional: false
    - job: alternative-tag [ubuntu, 25.04, arm64]
      optional: false
  parallel:
    matrix:
      - REGISTRY_URI: ["${CR_REGISTRY_URI}", "${GITLAB_REGISTRY_URI}"]

################################################################################
# Debian
################################################################################
image-build-publish [debian]:
  extends:
    - .image-build-publish
  variables:
    OS_FAMILY: debian
    OS_NAME: debian
    PLATFORM: amd64
  parallel:
    matrix:
      - OS_VERSION: "12"
        PLATFORM: [amd64, arm64]
  needs:
    - builder version

alternative-tag [debian, 12, amd64]:
  extends:
    - .alternative-tag
  variables:
    OS_NAME: debian
    OS_VERSION: "12"
    VERSION: ${DOCKER_BUILDER_VERSION}-amd64
  needs:
    - builder version
    - job: image-build-publish [debian]
      parallel:
        matrix:
          - OS_VERSION: "12"
            PLATFORM: amd64

alternative-tag [debian, 12, arm64]:
  extends:
    - .alternative-tag
  variables:
    OS_NAME: debian
    OS_VERSION: "12"
    VERSION: ${DOCKER_BUILDER_VERSION}-arm64
  needs:
    - builder version
    - job: image-build-publish [debian]
      parallel:
        matrix:
          - OS_VERSION: "12"
            PLATFORM: arm64

manifest [debian, 12]:
  extends: .manifest
  variables:
    OS_NAME: debian
    OS_VERSION: "12"
  needs:
    - builder version
    - job: alternative-tag [debian, 12, amd64]
      optional: false
    - job: alternative-tag [debian, 12, arm64]
      optional: false
  parallel:
    matrix:
      - REGISTRY_URI: ["${CR_REGISTRY_URI}", "${GITLAB_REGISTRY_URI}"]

################################################################################
# Rhel 8
################################################################################
image-build-publish [rhel, 8, amd64]:
  extends:
    - .image-build-publish
  variables:
    OS_FAMILY: rhel
    OS_NAME: rhel
    OS_VERSION: "8"
    RHEL_CT_VERSION: "2023.5_1.0.3"
    PLATFORM: amd64
  needs:
    - builder version

alternative-tag [rhel, 8, amd64]:
  extends:
    - .alternative-tag
  variables:
    OS_NAME: rhel
    OS_VERSION: "8"
    VERSION: ${DOCKER_BUILDER_VERSION}-amd64
  needs:
    - builder version
    - image-build-publish [rhel, 8, amd64]

image-build-publish [rhel, 8, arm64]:
  extends:
    - .image-build-publish
  variables:
    OS_FAMILY: rhel
    OS_NAME: rhel
    OS_VERSION: "8"
    RHEL_CT_VERSION: "2023.5_1.0.3"
    PLATFORM: arm64
  needs:
    - builder version

alternative-tag [rhel, 8, arm64]:
  extends:
    - .alternative-tag
  variables:
    OS_NAME: rhel
    OS_VERSION: "8"
    VERSION: ${DOCKER_BUILDER_VERSION}-arm64
  needs:
    - builder version
    - image-build-publish [rhel, 8, arm64]

manifest [rhel, 8]:
  extends: .manifest
  variables:
    OS_NAME: rhel
    OS_VERSION: "8"
  needs:
    - builder version
    - job: alternative-tag [rhel, 8, amd64]
      optional: false
    - job: alternative-tag [rhel, 8, arm64]
      optional: false
  parallel:
    matrix:
      - REGISTRY_URI: ["${CR_REGISTRY_URI}", "${GITLAB_REGISTRY_URI}"]

################################################################################
# Fedora 39
################################################################################
image-build-publish [fedora, 39]:
  extends:
    - .image-build-publish
  variables:
    OS_FAMILY: fedora
    OS_NAME: fedora
    OS_VERSION: "39"
    PLATFORM: amd64
  needs:
    - builder version
  parallel:
    matrix:
      - PLATFORM: [amd64, arm64]

alternative-tag [fedora, 39, amd64]:
  extends:
    - .alternative-tag
  variables:
    OS_NAME: fedora
    OS_VERSION: "39"
    VERSION: ${DOCKER_BUILDER_VERSION}-amd64
  needs:
    - builder version
    - job: image-build-publish [fedora, 39]
      parallel:
        matrix:
          - PLATFORM: amd64

alternative-tag [fedora, 39, arm64]:
  extends:
    - .alternative-tag
  variables:
    OS_NAME: fedora
    OS_VERSION: "39"
    VERSION: ${DOCKER_BUILDER_VERSION}-arm64
  needs:
    - builder version
    - job: image-build-publish [fedora, 39]
      parallel:
        matrix:
          - PLATFORM: arm64

manifest [fedora, 39]:
  extends: .manifest
  variables:
    OS_NAME: fedora
    OS_VERSION: "39"
  needs:
    - builder version
    - job: alternative-tag [fedora, 39, amd64]
      optional: false
    - job: alternative-tag [fedora, 39, arm64]
      optional: false
  parallel:
    matrix:
      - REGISTRY_URI: ["${CR_REGISTRY_URI}", "${GITLAB_REGISTRY_URI}"]

################################################################################
# Archlinux
################################################################################
image-build-publish [archlinux, latest, amd64]:
  extends:
    - .image-build-publish
  variables:
    OS_FAMILY: archlinux
    OS_NAME: archlinux
    OS_VERSION: latest
    PLATFORM: amd64
  needs:
    - builder version

alternative-tag [archlinux, latest, amd64]:
  extends:
    - .alternative-tag
  variables:
    OS_NAME: archlinux
    OS_VERSION: latest
    VERSION: ${DOCKER_BUILDER_VERSION}-amd64
  needs:
    - builder version
    - image-build-publish [archlinux, latest, amd64]

manifest [archlinux, latest]:
  extends: .docker copy
  stage: manifest
  variables:
    OS_NAME: archlinux
    OS_VERSION: latest
  script:
    - |
      skopeo copy \
        docker://${REGISTRY_URI}${CI_PROJECT_NAMESPACE#'softwareradiosystems'}/${CI_PROJECT_NAME}/builder-$OS_NAME-$OS_VERSION:${DOCKER_BUILDER_VERSION}-amd64 \
        docker://${REGISTRY_URI}${CI_PROJECT_NAMESPACE#'softwareradiosystems'}/${CI_PROJECT_NAME}/builder-$OS_NAME-$OS_VERSION:${DOCKER_BUILDER_VERSION}
  parallel:
    matrix:
      - REGISTRY_URI: ["${CR_REGISTRY_URI}", "${GITLAB_REGISTRY_URI}"]
  needs:
    - builder version
    - job: alternative-tag [archlinux, latest, amd64]
      optional: false
