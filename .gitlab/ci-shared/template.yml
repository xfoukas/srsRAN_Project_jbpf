include:
  - project: softwareradiosystems/ci/tools
    ref: "22"
    file: .gitlab/ci-shared/setup/all.yml
  - project: softwareradiosystems/ci/tools
    ref: "22"
    file: .gitlab/ci-shared/features/all.yml
  - local: .gitlab/ci-shared/e2e.yml
  - local: .gitlab/ci-shared/build.yml
  - local: .gitlab/ci/builders/version.yml

variables:
  # CI
  SLACK_CHANNEL_OK: "#ci_gnb"
  SLACK_CHANNEL_FAIL: "#ci_gnb"
  SLACK_CHANNEL_INFO_MSG: "#ci_gnb_verbose"
  # srsRAN references
  SRSRANDIR: &srsran_dir ${CI_PROJECT_DIR}/srsgnb
  SRSRAN_REPO_URL: https://gitlab-ci-token:${CI_JOB_TOKEN}@${CI_SERVER_SHELL_SSH_HOST}/softwareradiosystems/srsgnb.git
  # SRSRAN_COMMIT: dev

######
# CI #
######
.is using latest:
  image: ubuntu:24.04
  stage: ci
  rules:
    - if: $ON_MR
  variables:
    GIT_LFS_SKIP_SMUDGE: 1
  script:
    - DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends git git-lfs apt-transport-https ca-certificates && git lfs install
    - mkdir -p ${SRSRANDIR}
    - git clone --depth 1 ${SRSRAN_REPO_URL} ${SRSRANDIR}
    - cd ${SRSRANDIR}
    - SRSRAN_LATEST_COMMIT=$(git rev-parse HEAD)
    - git fetch --depth=1 origin ${SRSRAN_COMMIT}
    - COMMIT_USED_IN_PIPELINE=$(git rev-parse FETCH_HEAD)
    - |
      if [[ $COMMIT_USED_IN_PIPELINE != $SRSRAN_LATEST_COMMIT ]]; then
        echo "Please update to latest srsRAN commit: $SRSRAN_LATEST_COMMIT"
        exit 1
      fi

is using latest:
  extends: .is using latest

download srsran:
  image: ubuntu:22.04
  stage: ci
  rules:
    - if: $ON_MR
    - if: $ON_WEB
    - if: $ON_API
    - if: $ON_SCHEDULE
    - if: $CI_DESCRIPTION
  script:
    - DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends git git-lfs apt-transport-https ca-certificates && git lfs install
    - |
      mkdir -p ${SRSRANDIR}
      cd ${SRSRANDIR}
    - |
      git init > /dev/null
      git remote add origin ${SRSRAN_REPO_URL} > /dev/null
      git fetch --depth=1 origin ${SRSRAN_COMMIT} > /dev/null
      git reset --hard FETCH_HEAD
    - git config --global --add safe.directory ${SRSRANDIR}
    - |
      if [[ -f $PLUGINS_DATA_FILE ]] && [[ $CI_DISABLE_PLUGINS != "True" ]]; then
        CI_PLUGIN_COMMIT_SHA=$(cat .gitlab/ci/plugin_version.txt)
        while IFS='|' read -r PLUGIN_PATH PLUGIN_REPO PLUGIN_REF; do
          PLUGIN_REF=$(eval echo $PLUGIN_REF)    
          echo "#########################"
          echo "#### $PLUGIN_PATH checkout ####"
          echo "#########################"
          git submodule add https://gitlab-ci-token:${CI_JOB_TOKEN}@${CI_SERVER_SHELL_SSH_HOST}/${PLUGIN_REPO}.git plugins/${PLUGIN_PATH}
          cd plugins/${PLUGIN_PATH}
          git fetch --depth=1 origin ${PLUGIN_REF} > /dev/null
          git config advice.detachedHead false
          git checkout ${PLUGIN_REF}
          cd ${SRSRANDIR}
        done < <(grep -v '^#' "$PLUGINS_DATA_FILE")
      fi
  artifacts:
    paths:
      - $SRSRANDIR
  needs: []

builder version:
  extends: .builder version
  rules:
    - if: $ON_MR
    - if: $ON_WEB
    - if: $ON_API
    - if: $ON_SCHEDULE
    - if: $CI_DESCRIPTION =~ /Release/
      when: never
    - if: $CI_DESCRIPTION
  variables:
    SRSRANDIR: *srsran_dir
  needs:
    - job: download srsran

#########
# Build #
#########
.cache_set:
  cache:
    - key: ${OS}-${COMPILER}-${CMAKE_BUILD_TYPE}-${MARCH}
      paths:
        - ${CI_PROJECT_DIR}/ccache
        - ${SRSRANDIR}/ccache
      policy: push

.cache_get:
  cache:
    - key: ${OS}-${COMPILER}-${CMAKE_BUILD_TYPE}-${MARCH}
      paths:
        - ${CI_PROJECT_DIR}/ccache
        - ${SRSRANDIR}/ccache
      policy: pull-push

.build_and_unit:
  extends: .build_and_unit_template
  after_script:
    - mv ${CI_PROJECT_DIR}/build/coverage.xml      ${CI_PROJECT_DIR}/${CI_JOB_ID}_coverage.xml            || true
    - |
      mv ${SRSRANDIR}/build/apps/gnb/gnb  /tmp/gnb
      mv ${SRSRANDIR}/build/apps/cu/srscu /tmp/srscu
      mv ${SRSRANDIR}/build/apps/du/srsdu /tmp/srsdu
      cd ${SRSRANDIR}/build
      make clean
      mv /tmp/gnb   ${SRSRANDIR}/build/apps/gnb/gnb
      mv /tmp/srscu ${SRSRANDIR}/build/apps/cu/srscu
      mv /tmp/srsdu ${SRSRANDIR}/build/apps/du/srsdu
  artifacts:
    when: always
    reports:
      coverage_report:
        coverage_format: cobertura
        path: ${CI_JOB_ID}_coverage.xml
    paths:
      - ${CI_JOB_ID}_coverage.xml
      - ${SRSRANDIR}/build/
  timeout: 1h
  needs:
    - job: download srsran
    - job: builder version
